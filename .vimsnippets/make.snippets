snippet docker-run "Run commands in a docker container"
# REPO_OWNER name and PROJECT_NAME must be lowercase
REPO_OWNER=$1
PROJECT_NAME=$2

IMAGE_TAG=$(REPO_OWNER)/$(PROJECT_NAME)_dev

SOURCE_CODE=${3:$2}

# Build the docker container
DOCKER_BUILD=docker build . -t $(IMAGE_TAG)

# Ensure the container is built and execute a command in it
DOCKER_RUN=$(DOCKER_BUILD) && docker run -it -v $(CURDIR):/$(PROJECT_NAME) $(IMAGE_TAG) sh -c

# Run before every command executed in the container
DOCKER_PRETASK=cd /$(PROJECT_NAME) && ${4:make local-format}

# Run run local make target in a docker container ex: check-cfn -> local-checkcfn
RUN_LOCAL_COMMAND_IN_DOCKER=$(DOCKER_RUN) "$(DOCKER_PRETASK) && make local-$@"

# To execute 'local-{name}' rules in the docker container add '{name}' to DOCKER_RULES.
#
# Example:
#
# DOCKER_RULES := $(DOCKER_RULES) format
# local-format:
#	yapf --recursive --in-place $(SOURCE_CODE)

# Ignore files/directories with the same name as the target ex: "test"
.PHONY=$(DOCKER_RULES)
# When 'make test' is run, the Makefile will run 'make local-test' in the docker container
$(DOCKER_RULES):
	$(RUN_LOCAL_COMMAND_IN_DOCKER)

endsnippet

snippet help "Get help from targets with ## in them"
help: ## Prints help for targets with comments
	@cat $(MAKEFILE_LIST) | \
	grep -E '^[a-zA-Z_-]+:.*?## .*$$' | \
	sed "s/local-//" | \
	sort | \
	awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", \$\$1, \$\$2}'
endsnippet

snippet pandoc_ieee
PAPER_NAME=$1

STANDARD_ARGS= --filter pandoc-crossref --filter pandoc-citeproc --biblio $(PAPER_NAME).bib --standalone

pdf-ieee:
	pandoc $(STANDARD_ARGS) -o $(PAPER_NAME).pdf -t latex --highlight-style pygments --variable documentclass=assets/latex/ieee --csl=assets/csl/ieee.csl -o $(PAPER_NAME).pdf $(PAPER_NAME).md

html-default:
	pandoc $(STANDARD_ARGS) -t html5 -c assets/fonts/cm/cm.css -c assets/css/academic-pub.css --template assets/templates/academic-html5.template --highlight-style pygments --toc -o $(PAPER_NAME).html $(PAPER_NAME).md

html-ieee:
	pandoc $(STANDARD_ARGS) -t html5 -c assets/fonts/cm/cm.css -c assets/css/academic-pub.css -c assets/css/ieee.css --template assets/templates/academic-html5.template --highlight-style pygments --toc --csl=assets/csl/ieee.csl -o $(PAPER_NAME).html $(PAPER_NAME).md

pdf-article:
	pandoc $(STANDARD_ARGS) -t latex --highlight-style pygments --variable documentclass=article --variable biblio-style=acm -o $(PAPER_NAME).pdf $(PAPER_NAME).md

pdf-memoir:
	pandoc $(STANDARD_ARGS) -t latex --highlight-style pygments --variable documentclass=memoir --variable biblio-style=acm -o $(PAPER_NAME).pdf $(PAPER_NAME).md


.PHONY:
clean:
	rm -f $(PAPER_NAME).html
	rm -f $(PAPER_NAME).pdf
endsnippet
