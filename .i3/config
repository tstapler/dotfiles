#
# _____   ___ _             _         _      _ ____   ___           __ _      
#|_   _| / __| |_ __ _ _ __| |___ _ _( )___ (_)__ /  / __|___ _ _  / _(_)__ _ 
#  | |   \__ \  _/ _` | '_ \ / -_) '_|/(_-< | ||_ \ | (__/ _ \ ' \|  _| / _` |
#  |_|   |___/\__\__,_| .__/_\___|_|   /__/ |_|___/  \___\___/_||_|_| |_\__, |
#                     |_|                                               |___/ 
#

# Set Modifier
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 15

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec terminator -p Stapler-Config -b

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+d exec --no-startup-id dmenu_recency

################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

exec --no-startup-id volumeicon
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
exec --no-startup-id pulseaudio
exec --no-startup-id pa-applet
bindsym $mod+Ctrl+m exec pavucontrol

################################################################################################

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# Start Applications
bindsym $mod+Ctrl+b exec terminal -e 'bmenu'
bindsym Print exec --no-startup-id i3-scrot

# start dmenu (a program launcher)
#bindsym $mod+d exec rofi -show run

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Workspaces
set $browser Browser
set $development Development
set $productivity Productivity
set $music Music
set $misc Miscellaneous 
set $social Social Media/Chat
set $netflix Netflix (Chill Optional)
set $school School

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# switch to workspace
bindsym $mod+1 workspace number 1 $browser
bindsym $mod+2 workspace number 2 $development
bindsym $mod+3 workspace number 3 $productivity
bindsym $mod+4 workspace number 4 $music
bindsym $mod+5 workspace number 5 $misc
bindsym $mod+6 workspace number 6 $social
bindsym $mod+7 workspace number 7 $netflix
bindsym $mod+8 workspace number 8 $school
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1 $browser
bindsym $mod+Shift+2 move container to workspace number 2 $development
bindsym $mod+Shift+3 move container to workspace number 3 $productivity
bindsym $mod+Shift+4 move container to workspace number 4 $music
bindsym $mod+Shift+5 move container to workspace number 5 $misc
bindsym $mod+Shift+6 move container to workspace number 6 $social
bindsym $mod+Shift+7 move container to workspace number 7 $netflix
bindsym $mod+Shift+8 move container to workspace number 8 $school
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Start App on workspace
for_window [class="Spotify"] move to workspace number 4 $music 
for_window [class="PomoDoneApp"] move to workspace number 3 $productivity 

for_window [class="Slack"] move to workspace number 6 $social

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# # Set shut down, restart and locking features
# bindsym $mod+. mode "$mode_system"
# set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
# mode "$mode_system" {
#     bindsym l exec --no-startup-id i3exit lock, mode "default"
#     bindsym s exec --no-startup-id i3exit suspend, mode "default"
#     bindsym u exec --no-startup-id i3exit switch_user, mode "default"
#     bindsym e exec --no-startup-id i3exit logout, mode "default"
#     bindsym h exec --no-startup-id i3exit hibernate, mode "default"
#     bindsym r exec --no-startup-id i3exit reboot, mode "default"
#     bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

#     # exit system mode: "Enter" or "Escape"
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }

# Add screenshot utility
bindsym $mod+Control+s exec "shutter --select"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Lock screen
bindsym $mod+shift+x exec ~/.i3/i3lock-extra.sh -s -p

# Autostart applications
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nitrogen --restore; sleep 1; compton -b
exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
exec --no-startup-id clipit
exec --no-startup-id blueman
exec --no-startup-id nm-applet
# exec_always --no-startup-id sbxkb
exec --no-startup-id start_conky_maia
# exec --no-startup-id start_conky_green
# exec --no-startup-id xautolock -time 10 -locker blurlock
exec_always --no-startup-id setcursor
# Comptom Composer (Smooth Transitions)
exec compton -f

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	status_command python3 ~/.i3/statusbar.py
	position top
	workspace_buttons yes
}

# # My bar
# bar {
#   i3bar_command ~/.local/lib/python2.7/site-packages/powerline/bindings/lemonbar/powerline-lemonbar.py --i3
# }
# exec_always --no-startup-id pkill -f 'python .*powerline-lemonbar\.py'
# exec_always --no-startup-id sleep 1 && ~/.i3/powerline-lemonbar.py --i3 --height 16

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%-
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master toggle

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 1 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 1 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl --player=spotify play-pause
bindsym XF86AudioPause exec playerctl --player=spotify play-pause
bindsym XF86AudioNext exec playerctl --player=spotify next
bindsym XF86AudioPrev exec playerctl --player=spotify previous
bindsym $mod+Mod1+p exec playerctl --player=spotify play-pause
bindsym $mod+Mod1+n exec playerctl --player=spotify next

# Disable window titlebars entirely
for_window [class="^.*"] border pixel 2

# Set inner/outer gaps
gaps inner 10
gaps outer 10

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

