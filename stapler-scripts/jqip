#!/usr/bin/env sh
__ScriptVersion="0.0.2"

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
usage ()
{
  echo "Usage :  $0 [options] [--]
    A wrapper around jq and sponge which allows inplace editing

    Dependencies: jq and sponge

    Example usage for cf-parameter editing:

    Adding items to an array

    $ jqip '. + [
    {
            \"ParameterKey\": \"DebugMode\",
            \"ParameterValue\": \"INFO\"
    },
    {
            \"ParameterKey\": \"DumpConfigs\",
            \"ParameterValue\": \"True\"
    }
    ]' prod/**/*.json

    For more jq ideas see the jq cookbook:
    https://github.com/stedolan/jq/wiki/Cookbook

    Options:
    -h|help       Display this message
    -v|version    Display script version"

}    # ----------  end of function usage  ----------

#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------

while getopts ":hv" opt
do
  case $opt in

  h|help     )  usage; exit 0   ;;
# TODO: Add backup files functionality
  v|version  )  echo "$0 -- Version $__ScriptVersion"; exit 0   ;;

  * )  echo "\n  Option does not exist : $OPTARG\n"
      usage; exit 1   ;;

  esac    # --- end of case ---
done
shift $(($OPTIND-1))


JQ_EXPRESSION=$1
ARGS=("$@")
TARGET_FILES=${ARGS[@]:1}

for TARGET in $TARGET_FILES; do
  jq "$JQ_EXPRESSION" "$TARGET" | sponge "$TARGET"
done
